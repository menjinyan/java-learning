package src.menjinyan.java;

public class Demo21二维数组的静态初始化 {
    public static void main(String[] args) {
         /*二维数组静态初始化格式:
        数据类型[][]数组名=new 数据类型[][] {{元素1,元素2},{元素1,元素2}};
        简化格式:
        数据类型[][] 数组名={{元素1,元素2},{元素1,元素2}};
        元素访问:
        数组名[索引][索引];
        二维数组遍历:
        先得到一维数组，再遍历一维数组获取元素*/

        //1、二维数组静态初始化格式
        //数据类型[][] 数组名 = new 数据类型[][] {{元素1,元素2},{元素1,元素2}};
        int[][] arr1 = {
                {1, 2, 3},
                {4, 5, 6, 7, 8}
        };
        //2、获取元素
        //System.out.println(arr1[0]); //表示获取二维数组中的第一个一维数组的地址值
        //arr3[0]:二维数组中的第一个一维数组
        //arr3[0][0]:获取第一个一维数组中0索引元素
        System.out.println(arr1[0][0]);//获取的元素为1
        System.out.println(arr1[1][4]);//获取的元素为8

        //3、二维数组的遍历
        //外循环:遍历二维数组，得到里面的每一个一维数组
        for (int i = 0; i < arr1.length; i++) {
            //i表示二维数组中的每一个索引
            //arr3[i]表示二维数组中的每一个元素(一维数组)
            //内循环:遍历一维数组，得到里面的每一个元素
            for (int j = 0; j < arr1[i].length; j++) {
                //j表示一维数组中的每一个元素
                System.out.print(arr1[i][j] + " ");
            }
            System.out.println();
        }
    }
}

